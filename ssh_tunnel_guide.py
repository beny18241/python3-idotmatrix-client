#!/usr/bin/env python3
"""
SSH Tunnel Guide
Step-by-step guide for SSH tunneling OAuth authentication
"""

def print_ssh_tunnel_guide():
    """Print SSH tunnel guide"""
    
    print("üîß SSH Tunnel Guide for OAuth Authentication")
    print("=" * 60)
    
    print("üìã Problem: Remote server has no browser for OAuth authentication")
    print("üí° Solution: SSH tunneling to use your local browser")
    print()
    
    print("1Ô∏è‚É£ On your LOCAL machine, run this command:")
    print("   ssh -L 8080:localhost:8080 your_username@your_server_ip")
    print()
    print("   Example:")
    print("   ssh -L 8080:localhost:8080 user@192.168.1.100")
    print("   ssh -L 8080:localhost:8080 user@your-server.com")
    print()
    
    print("2Ô∏è‚É£ This creates a tunnel:")
    print("   ‚Ä¢ Local port 8080 ‚Üí Server port 8080")
    print("   ‚Ä¢ OAuth uses localhost:8080 on server")
    print("   ‚Ä¢ Browser opens on your LOCAL machine")
    print()
    
    print("3Ô∏è‚É£ On the SERVER, run OAuth setup:")
    print("   python oauth_ssh_tunnel.py")
    print()
    
    print("4Ô∏è‚É£ What happens:")
    print("   ‚Ä¢ OAuth opens browser on your LOCAL machine")
    print("   ‚Ä¢ You authenticate with Google")
    print("   ‚Ä¢ Token is saved on the SERVER")
    print("   ‚Ä¢ You can now use OAuth calendar access")
    print()
    
    print("5Ô∏è‚É£ Test the setup:")
    print("   python oauth_calendar_final.py DD:4F:93:46:DF:1A tomorrow")
    print()
    
    print("üí° Tips:")
    print("   ‚Ä¢ Keep the SSH tunnel running during OAuth")
    print("   ‚Ä¢ You can close the tunnel after OAuth is complete")
    print("   ‚Ä¢ The OAuth token is saved on the server")
    print("   ‚Ä¢ You only need to do this once")
    print()
    
    print("üîß Alternative: Manual OAuth")
    print("   If SSH tunneling doesn't work, you can:")
    print("   1. Run OAuth on your local machine")
    print("   2. Copy the token.json file to the server")
    print("   3. Use the token on the server")

def main():
    """Main function"""
    
    print_ssh_tunnel_guide()

if __name__ == '__main__':
    main()
